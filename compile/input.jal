grab    <standard>;
GRAB    <math>;

function factorial          [whole_number number, whole_number number2] returning whole_number <<

	if [number LTE number] <<
		returning 1;
	>>
    else <<
        returning number MUL factorial[number SUBS];
    >>
    
    if [TRUE] <<
    
    >>
>>

function anotherFunction    []                                          returning nothing <<

    declare something as symbol to <a>;

    check if [something] <<
        
        is <a>: <<

            printText[<Hello world!>];
        >>
        is <b>: <<
        
            printText[<Minecraft is awesome!!>];
        >>
        else: <<
        
            printText[<I have nothing else to say...>];
        >>
    >>
>>

function someComplexLogic   []                                          returning nothing <<
    
    if [(NOT(TRUE AND TRUE) LTE (FALSE AND FALSE)) EQUAL (20 SUBS EQUAL anotherFunction[])] <<
    
    >>
>>

function loopFunction       []                                          returning nothing <<

    repeat <<

    >> until [TRUE];
    
    repeat until [TRUE] <<

    >>
    
    repeat WHOLE_NUMBER i FROM 0 TO 10 <<

    >>
    
    repeat WHOLE_NUMBER i FROM 100 TO 0 WITH i SUBS <<

    >>
>>

function main               []                                          returning nothing <<
	
	printText[factorial[46]];
>>
